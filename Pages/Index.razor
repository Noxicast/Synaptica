@page "/"
@page "/index"

@using Synaptica.Data
@using Synaptica.Shared.Models
@using Microsoft.EntityFrameworkCore

@inject SynpaticaDbContext DbContext
@inject Synaptica.Services.SessionService sessionService
@inject NavigationManager NavigationManager

<PageTitle>Synaptica Home</PageTitle>

<link rel="stylesheet" href="css/site.css" />

<div class="dashboard-container">
    <section class="welcome-section">
        <h1 class="welcome-title">Welcome back, @userName! 👋</h1>
        <p class="intro-text">
            Welcome to Synaptica, your personalized learning journey starts here. Explore interactive courses, track your progress, and enhance your skills through our comprehensive learning platform.
        </p>
    </section>

    <section class="courses-section">
        @if (userCourses?.Count > 0)
        {
            <h2 class="section-title">Your Learning Journey</h2>
            <div class="courses-grid">
                @foreach (var course in userCourses)
                {
                    <div class="course-card">
                        <h3 class="course-title">@(course.Title ?? "No Title Available")</h3>
                        <p class="course-description">@(course.Description ?? "No Description Available")</p>
                        <div class="course-meta">
                            <span>⏱️ Duration: @(course.Duration ?? "No Duration Provided")</span>
                        </div>
                        <button class="btn btn-primary" @onclick="() => NavigateToCourseDashboard(course.CourseId)">
                            Continue Learning →
                        </button>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <p class="empty-state-text">You haven't enrolled in any courses yet.</p>
                <button class="btn btn-primary" @onclick="NavigateToEnrollmentPage">
                    Browse Available Courses →
                </button>
            </div>
        }
    </section>
</div>

@code {
    private string? userName = "Guest";
    private List<Course>? userCourses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch the logged-in user details
            if (sessionService.LoggedInUser > 0)
            {
                var user = await DbContext.Users.FindAsync(sessionService.LoggedInUser);
                userName = user?.Name ?? "Guest";

                // Fetch courses the user is enrolled in
                userCourses = await (from enrollment in DbContext.Enrollments
                                     join course in DbContext.Courses on enrollment.CourseId equals course.CourseId
                                     where enrollment.UserId == sessionService.LoggedInUser
                                     select course).ToListAsync();
            }
            else
            {
                userCourses = new List<Course>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching user data or courses: {ex.Message}");
            userCourses = new List<Course>();
        }
    }

    private void NavigateToCourseDashboard(int courseId)
    {
        NavigationManager.NavigateTo($"/course-home/{courseId}");
    }

    private void NavigateToEnrollmentPage()
    {
        NavigationManager.NavigateTo("/courses");
    }
}
