@page "/index"

@using Synaptica.Data
@using Synaptica.Shared.Models
@using Microsoft.EntityFrameworkCore

@inject SynpaticaDbContext DbContext
@inject Synaptica.Services.SessionService sessionService
@inject NavigationManager NavigationManager

<PageTitle>Synaptica Home</PageTitle>

<!-- Welcome Message -->
<div class="welcome-message">
    <h2>Welcome, @userName!</h2>
    @if (userCourses?.Count > 0)
    {
        <p>Here are the courses you're enrolled in:</p>
    }
    else
    {
        <p>You are not enrolled in any courses yet.</p>
        <button class="btn-enroll" @onclick="NavigateToEnrollmentPage">Browse Available Courses</button>
    }
</div>

@if (userCourses != null && userCourses.Count > 0)
{
    <h3>Your Courses</h3>
    <div class="course-list">
        @foreach (var course in userCourses)
        {
            <div class="course-item">
                <h4>@(course.Title ?? "No Title Available")</h4>
                <p>@(course.Description ?? "No Description Available")</p>
                <p><strong>Duration:</strong> @(course.Duration ?? "No Duration Provided")</p>
                <button class="btn-view" @onclick="() => NavigateToCourseDashboard(course.CourseId)">View</button>
            </div>
        }
    </div>
}

<style>
    .welcome-message {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .welcome-message h2 {
        font-size: 1.8rem;
        margin-bottom: 0.5rem;
    }

    .course-list {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
    }

    .course-item {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 1rem;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        flex: 1 1 calc(33.333% - 1.5rem);
        max-width: calc(33.333% - 1.5rem);
    }

    .course-item h4 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
    }

    .course-item p {
        margin: 0.5rem 0;
        color: #555;
    }

    .btn-view, .btn-enroll {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        cursor: pointer;
        text-align: center;
    }

    .btn-enroll:hover, .btn-view:hover {
        background-color: #0056b3;
    }
</style>

@code {

    private string? userName;
    private List<Course>? userCourses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch the user's name
            var user = await DbContext.Users.FindAsync(sessionService.LoggedInUser);
            userName = user?.Name ?? "User";

            // Fetch only the courses where the user is enrolled
            userCourses = await (from enrollment in DbContext.Enrollments
                                 join course in DbContext.Courses on enrollment.CourseId equals course.CourseId
                                 where enrollment.UserId == sessionService.LoggedInUser
                                 select course).ToListAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error fetching user data or courses: " + ex.Message);
        }
    }

    private void NavigateToCourseDashboard(int courseId)
    {
        // Navigate to the course dashboard page, passing the courseId
        NavigationManager.NavigateTo($"/course-home/{courseId}");
    }

    private void NavigateToEnrollmentPage()
    {
        // Navigate to the courses enrollment page
        NavigationManager.NavigateTo("/courses");
    }
}
